{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","title","className","href","TodoInfo","todo","completed","classNames","TodoList","todos","map","getUserById","userId","usersFromServer","find","App","useState","sourceTodos","setSourceTodos","newTodoTitle","setNewTodoTitle","newTodoUser","setNewTodoUser","hasTitleError","setHasTitleError","hasUserError","setHasUserError","onSubmit","event","preventDefault","newTodo","Math","max","prevTodos","type","value","placeholder","onChange","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03e35880.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { Props } from './UserInfo.types';\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <label title=\"User email\">\n      <a\n        className=\"UserInfo message-body\"\n        href={`mailto:${email}`}\n      >\n        {name}\n      </a>\n    </label>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Props } from './TodoIndo.types';\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'message',\n        'TodoInfo',\n        {\n          'TodoInfo--completed is-success': completed,\n          'is-danger': !completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title message-header\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport './TodoList.scss';\nimport { Props } from './TodoList.types';\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <div className=\"TodoList-container\">\n    <section className=\"TodoList section\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  </div>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { Todo, TodoWithUser, User } from './react-app-env';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nfunction getLargestTodoId(todos: Todo[]): number {\n  return Math.max(...todos.map(todo => todo.id));\n}\n\nexport const todos: TodoWithUser[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [sourceTodos, setSourceTodos] = useState(todos);\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n  const [newTodoUser, setNewTodoUser] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const handleSubmitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const newTodo: TodoWithUser = {\n      id: getLargestTodoId(sourceTodos) + 1,\n      userId: newTodoUser,\n      title: newTodoTitle,\n      completed: false,\n      user: getUserById(newTodoUser),\n    };\n\n    setHasTitleError(!newTodoTitle);\n    setHasUserError(!newTodoUser);\n\n    if (newTodoTitle && newTodoUser) {\n      setSourceTodos(\n        prevTodos => [...prevTodos, newTodo],\n      );\n      setNewTodoUser(0);\n      setNewTodoTitle('');\n    }\n  };\n\n  const handleUserSelect = (\n    { target: { value } }: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setNewTodoUser(+value);\n    setHasUserError(false);\n  };\n\n  const handleTitleChange = (\n    { target: { value } }: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setNewTodoTitle(\n      value.replace(/[^a-zA-Z0-9\\sруен]/g, ''),\n    );\n\n    setHasTitleError(false);\n  };\n\n  return (\n    <div className=\"App-container\">\n      <div className=\"App\">\n        <h1 className=\"title has-text-centered centered\">Add todo form</h1>\n\n        <div className=\"columns\">\n          <div className=\"column\">\n            <TodoList todos={sourceTodos} />\n          </div>\n\n          <div className=\"section column centered\">\n            <form\n              onSubmit={handleSubmitForm}\n              className=\"form centered\"\n            >\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input\n                    data-cy=\"titleInput\"\n                    name=\"title\"\n                    type=\"text\"\n                    value={newTodoTitle}\n                    placeholder=\"Enter a title\"\n                    onChange={handleTitleChange}\n                    className=\"input\"\n                  />\n                  {hasTitleError && (\n                    <span className=\"error help is-danger\">\n                      Please enter a title\n                    </span>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"field\">\n                <div className=\"control\">\n                  <div className=\"select\">\n                    <select\n                      data-cy=\"userSelect\"\n                      name=\"user\"\n                      value={newTodoUser}\n                      onChange={handleUserSelect}\n                      className=\"width-100\"\n                    >\n                      <option value=\"0\" disabled>\n                        Choose a user\n                      </option>\n\n                      {usersFromServer.map(user => (\n                        <option\n                          value={user.id}\n                          key={user.id}\n                        >\n                          {user.name}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                  {hasUserError && (\n                    <span className=\"error help is-danger\">\n                      Please choose a user\n                    </span>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"field has-text-centered\">\n                <div className=\"control\">\n                  <button\n                    type=\"submit\"\n                    data-cy=\"submitButton\"\n                    className=\"form__button button is-centered\"\n                  >\n                    Add\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}