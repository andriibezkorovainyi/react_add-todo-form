{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","getUserById","userId","usersFromServer","find","App","useState","sourceTodos","setSourceTodos","newTodoTitle","setNewTodoTitle","newTodoUser","setNewTodoUser","hasTitleError","setHasTitleError","hasUserError","setHasUserError","onSubmit","event","preventDefault","newTodo","sort","todo1","todo2","prevTodos","type","value","placeholder","onChange","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bbb3aa22.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../react-app-env';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo message-body\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../react-app-env';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo\n};\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'message',\n        'TodoInfo',\n        {\n          'TodoInfo--completed is-success': completed,\n          'is-danger': !completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title message-header\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../react-app-env';\nimport { TodoInfo } from '../TodoInfo';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <div className=\"TodoInfo-container\">\n    <section className=\"TodoList section\">\n\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  </div>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { Todo, User } from './react-app-env';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nfunction getLargestTodoId(todos: Todo[]): number {\n  const todoWithLargestId = [...todos].sort(\n    (todo1, todo2) => (\n      todo2.id - todo1.id\n    ),\n  )[0];\n\n  return todoWithLargestId.id;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [sourceTodos, setSourceTodos] = useState(todos);\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n  const [newTodoUser, setNewTodoUser] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n  const handleSubmitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const newTodo: Todo = {\n      id: getLargestTodoId(sourceTodos) + 1,\n      userId: newTodoUser,\n      title: newTodoTitle,\n      completed: false,\n      user: getUserById(newTodoUser),\n    };\n\n    setHasTitleError(!newTodoTitle);\n    setHasUserError(!newTodoUser);\n\n    if (newTodoTitle && newTodoUser) {\n      setSourceTodos(\n        prevTodos => [...prevTodos, newTodo],\n      );\n      setNewTodoUser(0);\n      setNewTodoTitle('');\n    }\n  };\n\n  const handleUserSelect = (\n    { target: { value } }: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setNewTodoUser(+value);\n    setHasUserError(false);\n  };\n\n  const handleTitleChange = (\n    { target: { value } }: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setNewTodoTitle(\n      value.replace(/[^a-zA-Z0-9\\sруен]/g, ''),\n    );\n\n    setHasTitleError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title has-text-centered\">Add todo form</h1>\n\n      <div className=\"columns\">\n        <div className=\"column\">\n          <TodoList todos={sourceTodos} />\n        </div>\n\n        <div className=\"section column\">\n          <form\n            onSubmit={handleSubmitForm}\n            className=\"form\"\n          >\n            <div className=\"field\">\n              <div className=\"control\">\n                <input\n                  data-cy=\"titleInput\"\n                  name=\"title\"\n                  type=\"text\"\n                  value={newTodoTitle}\n                  placeholder=\"Enter a title\"\n                  onChange={handleTitleChange}\n                  className=\"input\"\n                />\n                {hasTitleError && (\n                  <span className=\"error help is-danger\">\n                    Please enter a title\n                  </span>\n                )}\n              </div>\n            </div>\n\n            <div className=\"field\">\n              <div className=\"control\">\n                <div className=\"select\">\n                  <select\n                    data-cy=\"userSelect\"\n                    name=\"user\"\n                    value={newTodoUser}\n                    onChange={handleUserSelect}\n                    className=\"width-100\"\n                  >\n                    <option value=\"0\" disabled>\n                      Choose a user\n                    </option>\n\n                    {usersFromServer.map(user => (\n                      <option\n                        value={user.id}\n                        key={user.id}\n                      >\n                        {user.name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                {hasUserError && (\n                  <span className=\"error help is-danger\">\n                    Please choose a user\n                  </span>\n                )}\n              </div>\n            </div>\n\n            <div className=\"field has-text-centered\">\n              <div className=\"control\">\n                <button\n                  type=\"submit\"\n                  data-cy=\"submitButton\"\n                  className=\"form__button button is-centered\"\n                >\n                  Add\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}